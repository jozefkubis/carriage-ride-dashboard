import supabase, { supabaseUrl } from "./supabase";

export async function getLandingPageData() {
  const { data, error } = await supabase
    .from("landingPage")
    .select("*")
    .single();

  if (error) {
    console.error(error);
    throw new Error("Nastavenia nie je mo≈æn√© naƒç√≠ta≈•");
  }

  return data;
}

export async function updateLandingPageData(id, updates) {
  if (!id) throw new Error("Ch√Ωba ID pre aktualiz√°ciu landing page");

  const existingImage = updates.image?.startsWith?.(supabaseUrl);

  const imageName = `${Date.now()}-${updates.image.name}`.replace(/\s/g, "-");
  const imagePath = existingImage
    ? updates.image
    : `${supabaseUrl}/storage/v1/object/public/productPics/${imageName}`;

  const { data, error } = await supabase
    .from("landingPage")
    .update({ ...updates, image: imagePath })
    .eq("id", id) // üîπ Tu prid√°vame id do WHERE podmienky
    .select()
    .single();

  if (error) {
    console.error("Chyba pri aktualiz√°cii landing page:", error.message);
    throw new Error("Landing page nie je mo≈æn√© aktualizova≈•");
  }

  if (!existingImage) {
    const { error: storageError } = await supabase.storage
      .from("productPics")
      .upload(imageName, updates.image);

    if (storageError) {
      console.error("‚ùå Chyba pri nahr√°van√≠ obr√°zka:", storageError);
      throw new Error("Obr√°zok nie je mo≈æn√© nahra≈•");
    }
  }

  return data;
}
